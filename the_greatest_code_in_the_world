#include <stdio.h>
#include <stdlib.h>
 
int cu;
int procurar(int vetor[],int x,int n){
    int i;
    for(i=0;i<n;i++){
        if(vetor[i]==x){
            return x;
        }
    }
    return -1;
}
 
void bucetola(int emordem[],int preordem[],int n,int vetor[]){
    int r = procurar(emordem,preordem[0],n);
    if(r!=0){
        bucetola(emordem,preordem+1,r,vetor);
    }
    if(r!=n-1){
        bucetola(emordem+r+1,preordem+r+1,n-r-1,vetor);
    }
    vetor[cu]=preordem[0];
    cu++;
}
 
int main(){
    printf("bingulina");
    int * preordem;
    int * emordem;
    int * posordem;
    int i,x,n;
    int *vetor;
    int deuruim=0;
 
    scanf("%i",&x);
    //alocar
    preordem=(int*)malloc(x*sizeof(int));
    emordem=(int*)malloc(x*sizeof(int));
    posordem=(int*)malloc(x*sizeof(int));
    vetor=(int*)malloc(x*sizeof(int));
    //ler as ordens
    for(i=0;i<x;i++){
        scanf("%i",&preordem[i]);
    }
    for(i=0;i<x;i++){
        scanf("%i",&posordem[i]);
    }
    for(i=0;i<x;i++){
        scanf("%i",&emordem[i]);
    }
    //preencher o vetor auxiliar
    cu=0;
    n=sizeof(emordem)/sizeof(emordem[0]);
    bucetola(emordem,preordem,n,vetor);
    for(i=0;i<x;i++){
        if(vetor[i]!=posordem[i]){
            deuruim++;
        }
    }
    if(deuruim==0){
        printf("yes\n");
    }
    else{
        printf("no\n");
    }
 
return 0;
}
